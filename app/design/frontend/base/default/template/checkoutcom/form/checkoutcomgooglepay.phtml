<div class="form-list" id="payment_form_<?php echo $this->getMethodCode() ?>">
	<!-- Input needed to sent the card token -->
	<input type="hidden" id="google-cko-card-token" name="payment[google_cko_card_token]" value="" />

	<script>
        var route = "<?php echo Mage::app()->getRequest()->getRouteName(); ?>";
        var buttonArea = '#checkout-review-submit';
        
        if(route === 'aw_onestepcheckout'){
            buttonArea = '#aw-onestepcheckout-place-order';
        }
        
        googlePayUiController = (function () {
            var DOMStrings = {
                buttonId: 'ckocom_googlePay',
                buttonClass: 'google-pay-button',
                googleButtonArea: 'ckocom_googlePay_area',
                buttonArea: buttonArea,
                placeOrder: '.btn-checkout',
                paymentOptionLabel: '#dt_method_checkoutcomgooglepay > label:nth-child(2)',
                iconSpacer: 'cko-wallet-icon-spacer',
                token: 'google-cko-card-token'
            }

            return { 
                hideDefaultPlaceOrder: function () {
                        jQuery(DOMStrings.placeOrder).hide();
                },
                addGooglePayButton: function (type) {
                    // Add GogglePay wrapper div in the place order area
                    jQuery(DOMStrings.buttonArea).append('<div id="' +
                            DOMStrings.googleButtonArea + '"></div>');
                    // Create the GooglePayButton
                    var button = document.createElement('button');
                    button.id = DOMStrings.buttonId;
                    // Add button class based on the user configuration
                    button.className = DOMStrings.buttonClass + " " + type
                    // Append the GooglePay button to the GooglePay area
                    document.getElementById(DOMStrings.googleButtonArea).appendChild(button);
                },
                addIconSpacer: function () {
                    jQuery(DOMStrings.paymentOptionLabel).append("<div class='" + iconSpacer + "'></div>")
                },
                getElements: function () {
                    return {
                            googlePayButtonId: jQuery(DOMStrings.buttonId),
                            googlePayButtonClass: jQuery(DOMStrings.buttonClass),
                            placeOrder: jQuery(DOMStrings.defaultPlaceOrder),
                            buttonArea: jQuery(DOMStrings.buttonArea),
                    };
                },
                getSelectors: function () {
                    return {
                            googlePayButtonId: DOMStrings.buttonId,
                            googlePayButtonClass: DOMStrings.buttonClass,
                            placeOrder: DOMStrings.defaultPlaceOrder,
                            buttonArea: DOMStrings.buttonArea,
                            token: DOMStrings.token,
                    };
                }
            }
        })();

        googlePayTransactionController = (function (googlePayUiController) {
            var environment = '<?php echo $this->getEnvironment() ?>' === 'live' ? "PRODUCTION" : "TEST";
            var publicKey = '<?php echo $this->getPublicKey() ?>';
            var merchantId = '<?php echo $this->getGoogleMerchantIdentifier() ?>';
            var currencyCode = '<?php echo $this->getPaymentInfo()["currency"] ?>';
            var totalPrice = '<?php echo $this->getPaymentInfo()["total"] ?>';
            var buttonType = '<?php echo $this->getGoogleButtonType() ?>';

            var generateTokenPath = "/ckopayment/api/generateGoogleToken";
            var allowedPaymentMethods = ['CARD', 'TOKENIZED_CARD'];
            var allowedCardNetworks = ["AMEX", "DISCOVER", "JCB", "MASTERCARD", "VISA"];

            var _setupClickListeners = function () {
                jQuery(document).on('click', '#' + googlePayUiController.getSelectors().googlePayButtonId, function (e) {
                    e.preventDefault();
                    _startPaymentDataRequest();
                });

            }

            var _getGooglePaymentDataConfiguration = function () {
                return {
                        merchantId: merchantId,
                        paymentMethodTokenizationParameters: {
                                tokenizationType: 'PAYMENT_GATEWAY',
                                parameters: {
                                        'gateway': 'checkoutltd',
                                        'gatewayMerchantId': publicKey
                                }
                        },
                        allowedPaymentMethods: allowedPaymentMethods,
                        cardRequirements: {
                                allowedCardNetworks: allowedCardNetworks
                        }
                };
            }

            var _getGoogleTransactionInfo = function () {
                return {
                        currencyCode: currencyCode,
                        totalPriceStatus: 'FINAL',
                        totalPrice: totalPrice
                };
            }

            var _getGooglePaymentsClient = function () {
                return (new google.payments.api.PaymentsClient({ environment: environment }));
            }

            var _generateCheckoutToken = function (token, callback) {
                var data = JSON.parse(token.paymentMethodToken.token);


                jQuery.ajax({
                        type: 'POST',
                        url : "<?php echo $this->getBaseUrl(); ?>" + generateTokenPath,
                        data: {
                                token: {
                                        protocolVersion: data.protocolVersion,
                                        signature: data.signature,
                                        signedMessage: data.signedMessage
                                }
                        },
                        success: function (outcome) {
                                callback(outcome);
                        },
                        error: function (err) {
                                console.log(err);
                        }
                });
            }

            var _startPaymentDataRequest = function () {
                var paymentDataRequest = _getGooglePaymentDataConfiguration();
                paymentDataRequest.transactionInfo = _getGoogleTransactionInfo();

                var paymentsClient = _getGooglePaymentsClient();
                paymentsClient.loadPaymentData(paymentDataRequest)
                    .then(function (paymentData) {
                            // handle the response
                            _generateCheckoutToken(paymentData, function (outcome) {
                                if (outcome !== '') {
                                        document.getElementById(googlePayUiController.getSelectors().token).value = outcome;
                                    if(route === 'aw_onestepcheckout'){
                                        jQuery('#aw-onestepcheckout-place-order-button').click();                                                         
                                        jQuery('.aw-onestepcheckout-place-order-please-wait').show();
                                    } else {
                                        review.save();
                                    }
                                } else {
                                        alert("Unable to generate the GooglePay token");
                                }
                            });
                    })
                    .catch(function (err) {
                            console.error(err);
                    });
            }

            return {
                init: function () {
                    window.googlepayinit = true;
                    _setupClickListeners();
                    googlePayUiController.hideDefaultPlaceOrder();
                    googlePayUiController.addGooglePayButton(buttonType);
                }
            }
        })(googlePayUiController);
	</script>
</div>